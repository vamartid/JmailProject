/*
 * License Copyright © 2000 Vasileios Martidis vamartid@yandex.com 
 * This work is free. You can redistribute it and/or modify it under
 *  the terms of the Do What The Fuck You Want To Public License,
 *  Version 2, as published by Sam Hocevar.
 *  See http://www.wtfpl.net/ for more details.
 */
package vamartid.test1._email;

import java.awt.Frame;
import javax.swing.JFrame;
import java.awt.event.*;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import static vamartid.test1._email.MY_socket_SERVER.PORT;

/**
 *
 * @author basilism
 */
public class Z_start extends javax.swing.JFrame {

    int xmouse;
    int ymouse;
//    private Socket SOCK;

    /**
     * Creates new form EmailMainGUI
     * 
     * @throws IOException if something goes wrong with the streams
     */
    public Z_start() throws IOException {
        //this.SOCK = new Socket("localhost", PORT);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        min1 = new javax.swing.JButton();
        close = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        portL = new javax.swing.JTextField();
        dragable = new javax.swing.JLabel();
        backround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(302, 342));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        min1.setToolTipText("Σμίκρυνση παραθύρου");
        min1.setBorder(null);
        min1.setBorderPainted(false);
        min1.setContentAreaFilled(false);
        min1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        min1.setFocusPainted(false);
        min1.setPreferredSize(new java.awt.Dimension(32, 9));
        min1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                min1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                min1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                min1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                min1MouseReleased(evt);
            }
        });
        min1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                min1ActionPerformed(evt);
            }
        });
        getContentPane().add(min1, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 0, 47, 32));

        close.setToolTipText("Κλείσιμο παραθύρου");
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                closeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                closeMouseReleased(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 0, 47, 32));

        start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vamartid/test1/buttons/str_1.png"))); // NOI18N
        start.setToolTipText("Εκκινηση JavaMail Server");
        start.setBorder(null);
        start.setBorderPainted(false);
        start.setContentAreaFilled(false);
        start.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        start.setFocusPainted(false);
        start.setPreferredSize(new java.awt.Dimension(32, 9));
        start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                startMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                startMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                startMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                startMouseReleased(evt);
            }
        });
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        getContentPane().add(start, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 64, 30));

        portL.setColumns(1);
        portL.setFont(new java.awt.Font("Calibri Light", 0, 26)); // NOI18N
        portL.setForeground(new java.awt.Color(255, 255, 255));
        portL.setText("6666");
        portL.setToolTipText("Εισήγαγε το PORT στο οποίο θες να τρέχει ο Server.\nΣημείωση: Στα Linux τα 1000 πρώτα PORTS χρησιμοποιούνται από το σύστημα.\n");
        portL.setBorder(null);
        portL.setName(""); // NOI18N
        portL.setOpaque(false);
        portL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portLActionPerformed(evt);
            }
        });
        portL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                portLKeyTyped(evt);
            }
        });
        getContentPane().add(portL, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 215, 240, 30));
        portL.getAccessibleContext().setAccessibleDescription("");

        dragable.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                dragableMouseDragged(evt);
            }
        });
        dragable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dragableMousePressed(evt);
            }
        });
        getContentPane().add(dragable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 32));

        backround.setFont(new java.awt.Font("Calibri Light", 0, 18)); // NOI18N
        backround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vamartid/test1/images/server3.png"))); // NOI18N
        backround.setRequestFocusEnabled(false);
        getContentPane().add(backround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 302, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        int port=Integer.parseInt(portL.getText());
 
        this.dispose();
        
        try {
            //PORT=port;
            new Z_server(port).setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(Z_start.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_startActionPerformed

    private void min1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_min1ActionPerformed
        // TODO add your handling code here:
        this.setState(ICONIFIED);
    }//GEN-LAST:event_min1ActionPerformed

    private void closeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseReleased
        // TODO add your handling code here:
        close.setIcon(null);

//        MY_socket_CLIENT CLIENT = new MY_socket_CLIENT();
//        try {
//            CLIENT.send_orders("exit", SOCK);
//        } catch (Exception ex) {
//            Logger.getLogger(Z_start.class.getName()).log(Level.SEVERE, null, ex);
//        }
        System.exit(0);
    }//GEN-LAST:event_closeMouseReleased

    private void closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseEntered
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/vamartid/test1/buttons/xB.png"));
        close.setIcon(II);
    }//GEN-LAST:event_closeMouseEntered

    private void closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseExited
        // TODO add your handling code here:
        close.setIcon(null);

    }//GEN-LAST:event_closeMouseExited

    private void closeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMousePressed
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/vamartid/test1/buttons/xA.png"));
        close.setIcon(II);
    }//GEN-LAST:event_closeMousePressed

    private void min1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_min1MouseEntered
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/vamartid/test1/buttons/B.png"));
        min1.setIcon(II);
    }//GEN-LAST:event_min1MouseEntered

    private void min1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_min1MouseExited
        // TODO add your handling code here:
        min1.setIcon(null);

    }//GEN-LAST:event_min1MouseExited

    private void min1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_min1MouseReleased
        // TODO add your handling code here:
        min1.setIcon(null);

    }//GEN-LAST:event_min1MouseReleased

    private void min1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_min1MousePressed
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/vamartid/test1/buttons/C.png"));
        min1.setIcon(II);
    }//GEN-LAST:event_min1MousePressed

    private void startMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseEntered
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/vamartid/test1/buttons/str_2.png"));
        start.setIcon(II);
    }//GEN-LAST:event_startMouseEntered

    private void startMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseExited
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/vamartid/test1/buttons/str_1.png"));
        start.setIcon(II);

    }//GEN-LAST:event_startMouseExited

    private void startMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMousePressed
        // TODO add your handling code here:
        ImageIcon II = new ImageIcon(getClass().getResource("/vamartid/test1/buttons/str_3.png"));
        start.setIcon(II);
    }//GEN-LAST:event_startMousePressed

    private void startMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseReleased
        ImageIcon II = new ImageIcon(getClass().getResource("/vamartid/test1/buttons/str_1.png"));
        start.setIcon(II);

    }//GEN-LAST:event_startMouseReleased

    private void dragableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dragableMousePressed
        xmouse = evt.getX();

        ymouse = evt.getY();


    }//GEN-LAST:event_dragableMousePressed

    private void dragableMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dragableMouseDragged
        int x = evt.getXOnScreen();

        int y = evt.getYOnScreen();

//System.out.println(x+" "+y);
        this.setLocation(x - xmouse, y - ymouse);

    }//GEN-LAST:event_dragableMouseDragged

    private void portLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portLActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_portLActionPerformed

    private void portLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_portLKeyTyped
        char c = evt.getKeyChar();
        if ( !(c>=48&&c<=57) ) {
            evt.consume();  // ignore event
        }
    }//GEN-LAST:event_portLKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Z_start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Z_start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Z_start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Z_start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Z_start().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Z_start.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backround;
    private javax.swing.JLabel close;
    private javax.swing.JLabel dragable;
    private javax.swing.JButton min1;
    private javax.swing.JTextField portL;
    private javax.swing.JButton start;
    // End of variables declaration//GEN-END:variables
}
